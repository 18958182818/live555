diff -rupN --exclude=.git live555-orig/liveMedia/MultiFramedRTPSource.cpp live555/liveMedia/MultiFramedRTPSource.cpp
--- live555-orig/liveMedia/MultiFramedRTPSource.cpp	2013-07-29 20:12:22.000000000 +0100
+++ live555/liveMedia/MultiFramedRTPSource.cpp	2013-07-29 20:09:32.000000000 +0100
@@ -72,7 +72,7 @@ MultiFramedRTPSource
   fReorderingBuffer = new ReorderingPacketBuffer(packetFactory);
 
   // Try to use a big receive buffer for RTP:
-  increaseReceiveBufferTo(env, RTPgs->socketNum(), 50*1024);
+  increaseReceiveBufferTo(env, RTPgs->socketNum(), 2000000);
 }
 
 void MultiFramedRTPSource::reset() {
diff -rupN --exclude=.git live555-orig/modifications.patch live555/modifications.patch
--- live555-orig/modifications.patch	1970-01-01 01:00:00.000000000 +0100
+++ live555/modifications.patch	2013-07-29 20:19:15.000000000 +0100
@@ -0,0 +1,12 @@
+diff -rupN --exclude=.git live555-orig/liveMedia/MultiFramedRTPSource.cpp live555/liveMedia/MultiFramedRTPSource.cpp
+--- live555-orig/liveMedia/MultiFramedRTPSource.cpp	2013-07-29 20:12:22.000000000 +0100
++++ live555/liveMedia/MultiFramedRTPSource.cpp	2013-07-29 20:09:32.000000000 +0100
+@@ -72,7 +72,7 @@ MultiFramedRTPSource
+   fReorderingBuffer = new ReorderingPacketBuffer(packetFactory);
+ 
+   // Try to use a big receive buffer for RTP:
+-  increaseReceiveBufferTo(env, RTPgs->socketNum(), 50*1024);
++  increaseReceiveBufferTo(env, RTPgs->socketNum(), 2000000);
+ }
+ 
+ void MultiFramedRTPSource::reset() {
diff -rupN --exclude=.git live555-orig/proxyServer/live555ProxyServer.cpp live555/proxyServer/live555ProxyServer.cpp
--- live555-orig/proxyServer/live555ProxyServer.cpp	2013-07-29 20:12:22.000000000 +0100
+++ live555/proxyServer/live555ProxyServer.cpp	2013-07-29 20:15:44.000000000 +0100
@@ -28,6 +28,7 @@ UserAuthenticationDatabase* authDB;
 int verbosityLevel = 0;
 Boolean streamRTPOverTCP = False;
 portNumBits tunnelOverHTTPPortNum = 0;
+portNumBits rtspServerPortNum = 554;
 char* username = NULL;
 char* password = NULL;
 Boolean proxyREGISTERRequests = False;
@@ -44,6 +45,7 @@ void usage() {
   *env << "Usage: " << progName
        << " [-v|-V]"
        << " [-t|-T <http-port>]"
+       << " [-p <rtsp-port>]"
        << " [-u <username> <password>]"
        << " [-R]"
        << " <rtsp-url-1> ... <rtsp-url-n>\n";
@@ -53,7 +55,7 @@ void usage() {
 int main(int argc, char** argv) {
   // Increase the maximum size of video frames that we can 'proxy' without truncation.
   // (Such frames are unreasonably large; the back-end servers should really not be sending frames this large!)
-  OutPacketBuffer::maxSize = 100000; // bytes
+  OutPacketBuffer::maxSize = 500000; // bytes
 
   // Begin by setting up our usage environment:
   TaskScheduler* scheduler = BasicTaskScheduler::createNew();
@@ -92,12 +94,28 @@ int main(int argc, char** argv) {
     case 'T': {
       // stream RTP and RTCP over a HTTP connection
       if (argc > 3 && argv[2][0] != '-') {
-	// The next argument is the HTTP server port number:                                                                       
-	if (sscanf(argv[2], "%hu", &tunnelOverHTTPPortNum) == 1
-	    && tunnelOverHTTPPortNum > 0) {
-	  ++argv; --argc;
-	  break;
-	}
+  // The next argument is the HTTP server port number:                                                                       
+  if (sscanf(argv[2], "%hu", &tunnelOverHTTPPortNum) == 1
+      && tunnelOverHTTPPortNum > 0) {
+    ++argv; --argc;
+    break;
+  }
+      }
+
+      // If we get here, the option was specified incorrectly:
+      usage();
+      break;
+    }
+
+    case 'p': {
+      // set port
+      if (argc > 3 && argv[2][0] != '-') {
+        // The next argument is the RTSP server port number:
+        if (sscanf(argv[2], "%hu", &rtspServerPortNum) == 1
+          && rtspServerPortNum > 0) {
+            ++argv; --argc;
+            break;
+        }
       }
 
       // If we get here, the option was specified incorrectly:
@@ -157,10 +175,6 @@ int main(int argc, char** argv) {
   portNumBits rtspServerPortNum = 554;
   rtspServer = createRTSPServer(rtspServerPortNum);
   if (rtspServer == NULL) {
-    rtspServerPortNum = 8554;
-    rtspServer = createRTSPServer(rtspServerPortNum);
-  }
-  if (rtspServer == NULL) {
     *env << "Failed to create RTSP server: " << env->getResultMsg() << "\n";
     exit(1);
   }
@@ -176,8 +190,8 @@ int main(int argc, char** argv) {
     }
     ServerMediaSession* sms
       = ProxyServerMediaSession::createNew(*env, rtspServer,
-					   proxiedStreamURL, streamName,
-					   username, password, tunnelOverHTTPPortNum, verbosityLevel);
+             proxiedStreamURL, streamName,
+             username, password, tunnelOverHTTPPortNum, verbosityLevel);
     rtspServer->addServerMediaSession(sms);
 
     char* proxyStreamURL = rtspServer->rtspURL(sms);
